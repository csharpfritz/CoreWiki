@page
@model CoreWiki.Pages.HistoryModel
@{
	ViewData["Title"] = $"History of {Model.Article.Topic}";
}

<h2>History of @Model.Article.Topic</h2>

<dl>
	<dt>Current Title:</dt>
	<dd>@Model.Article.Topic</dd>

	<dt>Curent Version:</dt>
	<dd>@Model.Article.Version</dd>

	<dt>Last Update By:</dt>
	<dd>@Model.Article.AuthorName</dd>	<!-- Need to replace with Author information -->

	<dt>Last Updated:</dt>
	<dd><span data-value="@Model.Article.Published" class="timeStampValue"> @Model.Article.Published</span></dd>

</dl>

@if (Model.DiffModel == null)
{
	<h3>Version History</h3>

	<form method="post" id="compareForm">
		<table class="table table-striped">
			<thead>
				<tr>
					<th>Author</th>
					<th>Version</th>
					<th>Change Date</th>
					<th>Compare</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var history in Model.Article.History.OrderByDescending(a => a.Version))
				{
					<tr>
						<td>@history.AuthorName</td>		<!-- NEED Author -->
						<td>@history.Version</td>
						<td><span data-value="@history.Published" class="timeStampValue"> @history.Published</span></td>
						<td><input type="checkbox" name="compare" value="@history.Version" class="form-check-input" /></td>
					</tr>
				}
			</tbody>
		</table>

		<input type="submit" class="btn btn-outline-info" value="Compare Versions" />

		<div class="compare-alert alert alert-danger alert-dismissible fade show mt-2" role="alert" hidden>
			You can only compare two versions of this article
		</div>

	</form>

	@section scripts {

		<script type="text/javascript">

			(function () {

				OnLoad();
				function OnLoad() {
					document.getElementById("compareForm").addEventListener("submit", OnSubmit);
				}

				function OnSubmit(e) {
					var checkedBoxes = document.querySelectorAll("input.form-check-input:checked");

					if (checkedBoxes.length !== 2) {
						e.preventDefault();
						document.querySelector('.compare-alert').hidden = false;
					}
				}
			})();

		</script>

	}
}
else
{

	<link rel="stylesheet" href="~/css/diff.css" />

	<div id="diffBox">
		<div id="leftPane">
			<div class="diffHeader">Old Text</div>

			@await Html.PartialAsync("_DiffPane", Model.DiffModel.OldText)
		</div>
		<div id="rightPane">
			<div class="diffHeader">New Text</div>
			@await Html.PartialAsync("_DiffPane", Model.DiffModel.NewText)
		</div>
		<div class="clear">
		</div>
	</div>

}
