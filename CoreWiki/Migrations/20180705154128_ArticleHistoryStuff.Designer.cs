// <auto-generated />
using CoreWiki.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using System;

namespace CoreWiki.Migrations
{
	[DbContext(typeof(ApplicationDbContext))]
	[Migration("20180705154128_ArticleHistoryStuff")]
	partial class ArticleHistoryStuff
	{
		protected override void BuildTargetModel(ModelBuilder modelBuilder)
		{
#pragma warning disable 612, 618
			modelBuilder
					.HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

			modelBuilder.Entity("CoreWiki.Models.Article", b =>
					{
						b.Property<int>("Id")
											.ValueGeneratedOnAdd();

						b.Property<Guid>("AuthorId");

						b.Property<string>("AuthorName")
											.IsRequired();

						b.Property<string>("Content");

						b.Property<DateTime>("PublishedDateTime")
											.HasColumnName("Published");

						b.Property<string>("Slug");

						b.Property<string>("Topic")
											.IsRequired()
											.HasMaxLength(100);

						b.Property<int>("Version");

						b.Property<int>("ViewCount");

						b.HasKey("Id");

						b.HasIndex("Slug")
											.IsUnique();

						b.ToTable("Articles");

						b.HasData(
											new { Id = 1, AuthorId = new Guid("a8cb43d7-0068-480b-806e-197381498dfe"), AuthorName = "Unknown", Content = "This is the default home page.  Please change me!", PublishedDateTime = new DateTime(2018, 7, 5, 15, 41, 28, 572, DateTimeKind.Utc), Slug = "home-page", Topic = "HomePage", Version = 1, ViewCount = 0 }
									);
					});

			modelBuilder.Entity("CoreWiki.Models.ArticleHistory", b =>
					{
						b.Property<int>("Id")
											.ValueGeneratedOnAdd();

						b.Property<int>("ArticleId");

						b.Property<Guid>("AuthorId");

						b.Property<string>("AuthorName");

						b.Property<string>("Content");

						b.Property<DateTime>("PublishedDateTime")
											.HasColumnName("Published");

						b.Property<string>("Slug");

						b.Property<string>("Topic")
											.IsRequired()
											.HasMaxLength(100);

						b.Property<int>("Version");

						b.HasKey("Id");

						b.HasIndex("ArticleId");

						b.ToTable("ArticleHistories");

						b.HasData(
											new { Id = 1, ArticleId = 1, AuthorId = new Guid("a8cb43d7-0068-480b-806e-197381498dfe"), AuthorName = "Unknown", Content = "This is the default home page.  Please change me!", PublishedDateTime = new DateTime(2018, 7, 5, 15, 41, 28, 572, DateTimeKind.Utc), Slug = "home-page", Topic = "HomePage", Version = 1 }
									);
					});

			modelBuilder.Entity("CoreWiki.Models.Comment", b =>
					{
						b.Property<int>("Id")
											.ValueGeneratedOnAdd();

						b.Property<int?>("ArticleId");

						b.Property<Guid>("AuthorId");

						b.Property<string>("Content")
											.IsRequired();

						b.Property<string>("DisplayName")
											.IsRequired()
											.HasMaxLength(100);

						b.Property<string>("Email")
											.IsRequired()
											.HasMaxLength(100);

						b.Property<int>("IdArticle");

						b.Property<DateTime>("SubmittedDateTime")
											.HasColumnName("Submitted");

						b.HasKey("Id");

						b.HasIndex("ArticleId");

						b.ToTable("Comments");
					});

			modelBuilder.Entity("CoreWiki.Models.SlugHistory", b =>
					{
						b.Property<int>("Id")
											.ValueGeneratedOnAdd();

						b.Property<DateTime>("AddedDateTime")
											.HasColumnName("Added");

						b.Property<int?>("ArticleId");

						b.Property<string>("OldSlug");

						b.HasKey("Id");

						b.HasIndex("ArticleId");

						b.HasIndex("OldSlug", "AddedDateTime");

						b.ToTable("SlugHistories");
					});

			modelBuilder.Entity("CoreWiki.Models.ArticleHistory", b =>
					{
						b.HasOne("CoreWiki.Models.Article", "Article")
											.WithMany("History")
											.HasForeignKey("ArticleId")
											.OnDelete(DeleteBehavior.Cascade);
					});

			modelBuilder.Entity("CoreWiki.Models.Comment", b =>
					{
						b.HasOne("CoreWiki.Models.Article", "Article")
											.WithMany("Comments")
											.HasForeignKey("ArticleId");
					});

			modelBuilder.Entity("CoreWiki.Models.SlugHistory", b =>
					{
						b.HasOne("CoreWiki.Models.Article", "Article")
											.WithMany()
											.HasForeignKey("ArticleId");
					});
#pragma warning restore 612, 618
		}
	}
}
