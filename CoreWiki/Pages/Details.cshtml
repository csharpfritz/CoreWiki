@page "{Slug?}"
@using CoreWiki.Application.Common
@model DetailsModel
@{
	var title = Localizer["Details"];
	if (!string.IsNullOrEmpty(Model.Article.Topic))
	{
		ViewData["Title"] = Model.Article.Topic;
	}
	else
	{
		ViewData["Title"] = title;
	}
}

<div class="card card-header">
	<div class="container">
		<div class="row">
			<div id="topicContainer" class="col-xl-7 col-lg-8 col-md-12">
				<h2 id="topic">@Model.Article.Topic</h2>
			</div>
			<div class="col-xl-5 col-lg-4 col-md-12">
				<div class="row">
					<div class="col-xl-12 small text-muted">@Localizer["Published"]: <span data-value="@Model.Article.Published" class="timeStampValue"> @Model.Article.Published</span></div>
				</div>
				<div class="row">
					<div class="col-xl-4 small"><span class="text-muted">@Localizer["ViewCount"]: </span><span class="badge badge-primary" data-value="@Model.Article.ViewCount"> @Model.Article.ViewCount</span></div>
					<div class="col-xl-8 small"><span class="text-muted">@Localizer["ReadingTime"]: </span><span class="badge badge-primary duration" data-duration="@Model.Article.Content.CalculateReadTime().TotalMilliseconds"></span></div>
				</div>
				<div class="row">
					<div class="col-xl-12 small"><a asp-page="History" asp-route-slug="@Model.Article.Slug">@string.Format(Localizer["HistoryFormat"].Value, Model.Article.Version)</a></div>
				</div>
			</div>
		</div>
	</div>
</div>
<br />
<div class="container">
	<markdown markdown="Article.Content" />

	<div>
		<a asp-page="/Edit" asp-route-slug="@Model.Article.Slug" asp-policy="@PolicyConstants.CanEditArticles" class="btn btn-outline-info">@Localizer["Edit"]</a>

		@if (!Model.Article.IsHomePage)
		{
			<a href="~/" class="btn btn-secondary">@Localizer["GoHome"]</a>
		}
	</div>

	<partial name="_CommentsPartial" model="Model" />
</div>
@section Scripts {
	@await Html.PartialAsync("_EditorScript")
	<script type="text/javascript">
		$('.duration').each(function () {
			var duration = Number($(this).attr('data-duration'));
			$(this).text(moment.duration(duration).humanize());
		});

		var themeName = document.querySelector("#selectTheme").value;
		if (themeName == "themeGhost") {
			configureGhost();
		}

		function configureGhost() {

			console.log("Configuring ghost");

			var topic = document.getElementById("topic").innerText;
			console.log(topic);
			var segmentSize = Math.ceil(topic.length / 5);
			var letters = document.createElement("div");
			letters.id = "letters";
			document.getElementById("topic").parentElement.appendChild(letters);
			var letterArray = topic.match(new RegExp('.{1,' + segmentSize + '}', 'g'));
			for (var i = 0; i < letterArray.length; i++) {
				var newLetter = document.createElement("h2");
				newLetter.className = "letter";
				newLetter.innerText = letterArray[i];
				letters.appendChild(newLetter);
			}

		}

	</script>
}

@section Styles {
	@await Html.PartialAsync("_EditorStyle")
}
